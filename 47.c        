#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef pair<int, int> II;

const int MAXN = (int)2e5 + 10;
const int MAXA = 2000001;
int n, x[MAXN], y[MAXN];
LL k, a[MAXN];
LL fx[MAXA + 10], gx[MAXA + 10];
LL fy[MAXA + 10], gy[MAXA + 10];

int findMaxPoints() {
    for (int i = 1; i <= n; ++i) {
        fx[x[i]] += 1;
        fy[y[i]] += 1;
        gx[x[i]] += x[i];
        gy[y[i]] += y[i];
    }
    for (int i = 1; i <= MAXA; ++i) {
        fx[i] += fx[i - 1];
        fy[i] += fy[i - 1];
        gx[i] += gx[i - 1];
        gy[i] += gy[i - 1];
    }

    LL sum = 0;
    for (int i = 1; i <= n; ++i) {
        LL sum_dist = 0;

        sum_dist += x[i] * fx[x[i]] - gx[x[i]];
        sum_dist += (gx[MAXA] - gx[x[i] - 1]) - x[i] * (fx[MAXA] - fx[x[i] - 1]);

        sum_dist += y[i] * fy[y[i]] - gy[y[i]];
        sum_dist += (gy[MAXA] - gy[y[i] - 1]) - y[i] * (fy[MAXA] - fy[y[i] - 1]);

        a[i] = sum_dist;
        sum -= a[i];
    }
    sort(a + 1, a + 1 + n);
    sum /= 2;

    int ans = -1;
    for (int i = 0; i <= n; ++i) {
        if (sum <= k) {
            ans = max(ans, i);
        }
        sum += a[i + 1];
    }
    return ans;
}

int main() {
	scanf("%d%lld", &n, &k);
	for (int i = 1; i <= n; ++i) {
		scanf("%d%d", &x[i], &y[i]);
		x[i] += MAXA / 2 + 1;
		y[i] += MAXA / 2 + 1;
	}

	printf("%d\n", findMaxPoints());
	return 0;
}